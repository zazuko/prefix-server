name: Build and push Docker image and deploy it to Kubernetes

on:
  push:
    branches:
      - "**"
    tags:
      - "v*.*.*"

jobs:
  docker:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        uses: zazuko/action-docker-meta@main
        id: docker_meta
        with:
          images: ghcr.io/zazuko/prefix-server

      - name: Tag
        id: tag
        run: echo ::set-output name=TAG::${GITHUB_REF#refs/tags/}

      - name: Build and push Docker images
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          file: ./Dockerfile
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          build-args: |
            COMMIT=${{ github.sha }}
            VERSION=${{ steps.tag.outputs.tag }}
          platforms: |
            linux/amd64
            linux/arm64/v8

  deploy:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs:
      - docker

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set Kubernetes context
        uses: azure/k8s-set-context@v1
        with:
          method: service-account
          k8s-url: ${{ secrets.K8S_URL }}
          k8s-secret: ${{ secrets.K8S_SECRET }}

      - name: Run Kubernetes tools
        run: |
          cd k8s/
          kustomize edit set image "ghcr.io/zazuko/prefix-server:pipeline-${GITHUB_RUN_ID}"
          kustomize build | tee manifest.yaml
          kubectl apply -f manifest.yaml
